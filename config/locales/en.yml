# Files in the config/locales directory are used for internationalization and
# are automatically loaded by Rails. If you want to use locales other than
# English, add the necessary files in this directory.
#
# To use the locales, use `I18n.t`:
#
#     I18n.t "hello"
#
# In views, this is aliased to just `t`:
#
#     <%= t("hello") %>
#
# To use a different locale, set it with `I18n.locale`:
#
#     I18n.locale = :es
#
# This would use the information in config/locales/es.yml.
#
# To learn more about the API, please read the Rails Internationalization guide
# at https://guides.rubyonrails.org/i18n.html.
#
# Be aware that YAML interprets the following case-insensitive strings as
# booleans: `true`, `false`, `on`, `off`, `yes`, `no`. Therefore, these strings
# must be quoted to be interpreted as strings. For example:
#
#     en:
#       "yes": yup
#       enabled: "ON"

en:
  hello: "Hello world"
  api:
    v1:
      recipes:
        errors:
          rate_limit: "Rate limit exceeded. Please try again later."
          empty_ingredients: "Ingredients cannot be empty"
          invalid_ingredients_format: "Invalid ingredients format. Expected String or Array"
          openai_rate_limit: "API rate limit exceeded. Please try again in about an hour"
          openai_error: "OpenAI API error: %{message}"
          recipe_generation: "Failed to generate recipe: %{message}"
          recipe_parsing: "Failed to parse recipe: %{message}"
          recipe_creation: "Failed to create recipe: %{message}"
          ingredients_processing: "Failed to process ingredients: %{message}"
          unexpected: "An unexpected error occurred"
        messages:
          limit_reached: "You have reached the maximum number of requests for this session."
      recipe_generator:
        prompts:
          base: |
            You are a professional chef. Create a recipe using these ingredients: %{ingredients}.
            The recipe should be clear, concise, and easy to follow.
            Return ONLY a JSON object with the following structure, no additional text:
            {
              "title": "Recipe Title",
              "ingredients": ["ingredient 1", "ingredient 2"],
              "instructions": ["step 1", "step 2"]
            }
          feasibility: |
            You are a professional chef. Given these ingredients: %{ingredients},
            analyze if they can make a coherent dish. Consider basic cooking principles and flavor combinations.
            Return ONLY "yes" if the ingredients can make a sensible dish, or "no" if they cannot.
            No additional explanation needed.
